두 다운로드 파일을 모두 같은 폴더 안에 합쳐 두어야 한다.
설치1 => 그냥 넘어가도 됨. 오류 수신, 학습 및 피드백 목적
데이터베이스는 물리적인 저장 공간. 그를 컨트롤 하는 Database Management System(DBMS)
학습용, 개발환경, 테스트용이라면 데스크톱.
실제 서버 운용시에는 서버환경
오라클 데이터 베이스와 오라클DBMS는 다르고, 따로 설치 된다.



호스트 이름 localhost
127.0.0.1
오라클 설치시 기본 port = 1521
PC에서 port를 통해야만 SW에 접근할 수 있고, 그에 따라 오라클을 사용할수 있다.
MySQL의 경우 3306

계정
system admin

scott tiger


데이터 : 관찰의 결과를 나타난 정량적 혹은 정성적인 실제 값

정보 : 데이터에 의미를 부여한 것

지식: 사물이나 현상에 대한 이해

데이터베이스 시스템은 데이터의 검색, 수정 작업을 주로 수행함
검색 = > insert
수정 = > insert , delete , upate
검색과 변경 빈도에 따른 데이터베이스 유형의 차이

테이블은 2차원 형태의 표처럼 볼 수 있도록 로우(ROW:행)와 칼럼(COLMUMN:열)으로 구성합니다.
표 형식으로 데이터를 저장해 놓고 있다.(물리적인 개념으로는 표 형식은 아님)
질의 삽입 수정 삭제 => 모두 행단위

Table 생성 (데이터들의 저장 규칙을 정의) => DDL
Table 조작 (데이터의 삽입 , 수정 , 삭제)  => DML
Table 제어 (사용자의 생성, 사용자의 권환)  => DCL
<SELECT 사용 예시>
SELECT bookname, publisher FROM Book;
SELECT의 결과도 Table 형식으로 반환된다.
SELECT bookname, publisher FROM Book Where price>=10000;


DDL의 경우 물리적인 적용의 유형으로  삭제 변경, 되면 트랜잭션 처리어(TCL)에 의해 복구할 수 없다.
DML의 경우에는 가능(롤백 됨)

DQL(질의어) SELECT
DML(테이터 조작어 - 데이터 변경시 사용) INSERT UPDATE DELETE
DDL(데이터 정의어 - 객체 생성 및 변경시 사용) CREATE ALTER DROP RENAME TRUNCATE
TCL(트렌젝션 처리어) COMMIT ROLLBACK SAVEPOINT
DCL(데이터 제어어) GRANT REVOKE


관계 데이터 모델
릴레이션(relation)  : 행과 열로 구성된 테이블

속성(attribute) or 열(column),차수
투플(tuple) or 행(row), 카디널리티
스키마 => column의 집합
인스턴스 => row의 집합

릴레이션의 특징
1.속성은 단일 값을 가진다.
- 각 속성의 값은 도메인에 정의된 값만을 가지며 그 값은 모두 단일 값이여야 함.
즉, 도메인에 맞는 형식의 단일 값 하나만 들어갈 수 있다.
2. 속성은 서로 다른 이름을 가진다.(하나의 테이블 기준)
- 속성은 한 릴레이션에서 서로 다른 이름을 가져야만 함.
3. 한 속성의 값은 모두 같은 도메인 값을 가진다.
-한 속성에 속한 열은 모두 그속성에서 정의한 도메인 값만 가질 수 있음.
4. 속성의 순서는 상관없다.(SELECT를 이용해 우리가 선언하는 순서대로 테이블에 나타나므로)
-속성의 순서가 달라도 릴레이션 스키마는 같음.
예) 릴레이션 스키마에서 (이름, 주소) 순으로 속성을 표시하거나 (주소, 이름) 순으로 표시하여도 상관없음
5.릴레이션 내의 중복된 투플(행 : row)은 혀용하지 않는다.
-하나의 릴레이션 인스턴스 내에서는 서로 중복된 값을 가질 수 없음. 즉 모든 투플은 서로 값이 달라야 함.
왜냐하면 데이터 베이스의 이용 자체가 중복된 데이터를 제한하고 , 각 데이터를 활용하는 데에 의의가 있기 때문이다.
6. 튜플의 순서는 상관 없다.(SQL 구문으로 데이터들의 순서를 사용자가 정렬할 수 있기 때문에)
-투플의 순서가 달라도 같은 릴레이션임. 관계 데이터 모델의 투플은 실제적인 값을 가지고 있으며 이 값은 시간이
지남에 따라 데이터의 삭제, 수정, 삽입에 따라 순서가 바뀔 수 있음.


무결성 제약조건
키
특정 투플을 식별할 때 사용하는 속성 혹은 속성의 집합임.
릴레이션은 중복된 투플을 허용하지 않기 때문에 각각의 투플에 포함된 속성들중 어느 하나는 값이 달라져야 함
즉 키가 되는 속성은 반드시 값이 달라서 투플들을 서로 구별할  수 있어야 함.
키는 릴레이션 간의 관계를 맺는 데도 사용됨.
키는 여러 개의 속성으로도 이루어 질 수 있으나, 보통 3개 이상은 거의 쓰지 않는 것이 일반적


슈퍼키(super key)
튜플을 유일하게 식별할 수 있는 하나의 속성 혹은 속성의 집합
주민번호, 전화번호 , 이름, 주소 , 이메일 의 경우
주민번호 하나이고, 주민번호 조합되는 모든 key들이 슈퍼키가 될 수 있다.

후보키(*)


기본키 (primary key)
여러 후보키 중 하나를 선정하여 대표로 삼는 키 (컬럼(속성)= 1개)
후보키가 하나뿐이라면 그 후보키를 기본키로 사용하면 되고 여러 개라면 릴레이션의 특성을 반영하여 하나를 선택하면 됨

기본키 선정 시 고려사항
릴레이션 내 투플을 식별할 수 있는 고유한 값을 가져야 함.
NULL값은 허용하지 않음.
키 값의 변동이 일어나지 않아야 함.
최대한 적은 수의 속성을 가진 것이라야 함.
향후 키를 사용하는 데 있어서 문제 발생 소지가 없어야 함.
릴레이션 스키마를 표현할 떄 기본키는 밑줄을 그어 표시함.

대리키 - 기본키 설정이 어려울 때    표기 ex) idx , index , no
기본키가 보안을 요하거나, 여러 개의 속성을 구성되어 복잡하거나, 마땅한 기본키가 없을 때는 일련번호
같은 가상의 속성을 만들어 기본키로 삼는 겨우가 있음. 이러한 키를 대리키(surrogate key) 혹은 인조키 라고 함.
대리키는 DBMS나 관련 소프트웨어에서 임의로 생성하는 값으로 사용자가 직관적으로 그 값의 의미를 알 수 없음.
오라클 내부에서 시퀀스를 이용하여 비중복적인 숫자 번호를 생성한다.

대체키
기본키로 선정되지 않은 후보키를 말함
수업 시간에 배웠던 고객 릴레이션의 경우 고객번호와 주민번호 중 고객번호를 기본키로 정하면 주민번호가 대체키가 됨

외래키
다른 릴레이션의 기본키를 참조하는 속성을 말함. 다른 릴레이션의 기본키를 참조하여 관계 데이터 모델의 특징인 릴레이션 간의 관계를 표현함.
릴레이션 간의 관계를 표현함
다른 릴레이션의 기본키를 참조하는 속성임
참조하고 참조되는 양쪽 릴레이션의 도메인(컬럼의 Data 정의)은 서로 같아야 함.
참조되는(기본키) 값이 변경되면 참조하는(외래키)도 변경됨
NuLL값과 중복 값 등이 혀용 됨.
자기 자신의 기본키를 참조하는 외래키도 가능함
외래키가 기본키의 일부가 될 수 있음.

무결성 제약조건



데이터 딕셔너리 TAB
오라클을 설치하면 제고오디는 사용자인 SCOTT은 학습을 위해서 테이블들이 제공됩니다. SCOTT이 소유하고 있는 테이블을 살펴보기 위해서 다음과 같은
명령을 입력합시다.
TAB은 TABLE의 약자로서 SCOTT 사용자가 소유하고 있는 테이블의 정보를 알려주는 데이터 딕셔너리 입니다.

테이블에서 데이터를 조회하기 위해서는 테이블의 구조를 알아야 합니다.
테이블의 구조를 확인하기 위한 명령어로는 DESCRIBE가 있습니다.
사용 예 ) DESC EMP; or DESC DEPT;
스크립트 출력에서 NOT NULL로 표기된 부분 같은 경우에 insert/update 시 NULL 저장을 하면 안 된다.

NULL => 아직 정해지지 않은 값. 자바의 개념과는 조금 다르다.

NUMBER 데이터 형은 숫자 데이터를 저장하기 위해서 제공됩니다.
NUMBER(procision, scale)
precision은 소수점을 포함한 전체 자리수를 의미하며 scale은 소수점 이하는 반올림되어 정수 값만 저장됩니다.
pricision과 scale을 모두 생략하면 입력한 데이터 값만큼 공간이 할당됩니다.

DATE는 세기, 년, 월, 일, 시간, 분, 초의 날짜 및 시간 데이터를 저장하기 위한 데이터 형입니다.
이렇든 날짜 타입 안에서 세기, 년, 월, 일, 시, 분, 초, 요일 등 여러 가지 정보가 들어 있지만
별다른 설정이 없으면 년, 월, 일만 출력합니다.
기본 날짜 형식은 "YY/MM/DD" 형식으로 년/ 월/일 로 출력됩니다.
2005년 12월 14일은 "05/12/14"로 출력

CHAR 
문자 데이터를 저장하기 위한 자료형으로 CHAR가 있습니다. CHAR는 고정 길이 문자 데이터를 저장합니다.
입력된 자료의 길이와는 상관없이 정해진 길이만큼 저장 영역 차지하며 최소 크기는 1입니다.
ex) gender(성별)과 같이 논리적으로 정해져있을 경우에는 gender char(1) 과 같이 선언

VARCHAR2
가변적인 길이의 문자열을 저장하기 위해서 제공합니다.
VARCHAR2(20) => 최대 20글자.

 SELECT 문은 데이터를 조회하기 위한 SQL 명령어입니다.
SELECT[DISTINCT]{*,column[Alias],...} FROM table_name;   
[선택사항] , ;=>반드시 붙여준다.

특정 데이터만 보기
select 뭐시기1 , 뭐시기2 from 테이블

산술 연산자
급여로 연봉 계산을 해보도록 합시다. 일반적으로 연봉은 급여를 12번 곱한 것이므로 연봉을 구하기 위해서 산술 연산자를 사용합시다.
SELECT sal + comm from emp 
null의 경우 정해지지 않은 숫자이므로 어떤 숫자를 더한다고 해도 결과값은 null로 표현될 수 밖에 없다.


NULL에 대한 정의
오라클에서 널은 매우 중요한 데이터.
1. 0도 아니고
2. 빈 공간도 아니다.
3. 미확정(해당 사항 없음) , 알 수 없는(unknown) 값을 의미한다.
4. 어떤 값인지 알 수 없지만 어떤 값이 존재하고 있다.
5.?혹은 무한대의 의미이므로
6. 연산 , 할당 , 비교가 불가능하다.

as 연산자
사용 예시 
select ename || ' is a ' || job as msg
from emp;


concatenation 연산자의 정의와 사용
사용 예시
select ename || ' is a ' || job as msg
from emp;

distinct 연산자
사용 예시
select distinct deptno from emp; 
select distinct deptno , job from emp order by deptno;

