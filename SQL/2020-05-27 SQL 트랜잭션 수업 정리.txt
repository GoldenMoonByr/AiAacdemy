2020-05-27
가상 테이블인 뷰
뷰는 반드시 만들어서 써야되는 것은 아님.
그러나 썼을 때 굉장히 좋은 효과를 얻을 수 있다.

가상 테이블 ?
테이블이란 저장 공간을 의미한다. 그러므로 뷰라는 가상 테이블은 물리적인 저장 공간이 아닌
논리적인 저장 공간임을 알 수 있다. 
예를들면 ) emp 사원번호 사원이름 직급 급여 등..을 기반으로 해서 하나의 가상 테이블로 만듦

가장 큰 목적은 보안이다.
emp를 주로 사용하는 부서가 인사/ 회계 가 아닌 영업쪽에도 공개가 된다면 
업무상 보안의 어려움을 겪을 수 있다. 그리고 관계형데이터베이스의 의의도 잃게 된다. 

논리적인 가상 테이블. 실질적으로 데이터를 저장하는 공간을 갖고 있지는 않고, 
뷰는 기본 테이블에서 파생된 객체로, 기본 테이블에 대한 하나의 쿼리문이다.
주로 view의 목적으로 select문을 만든다.


테이블을 생성하기 위해서는 crate table로 시작하지만 뷰를 생성하기 위해서는 create view로 시작합니다.
AS 다음은 마치 서브 쿼리문과 유사하다.
subquery에는 우리가 지금까지 사용하였던 select 문을 기술하면 된다.

사용예)
create view emp_view_deptno30
as  
select empno, ename, deptno from emp where deptno =30
;


select * from emp_view_deptno30;



desc user_views;

select view_name, text from user_views;




뷰를 사용하는 이유는 두 가지로 설명할 수 있다.
1.복잡하고 긴 쿼리문을 뷰로 정의하면 접근을 단순화시킬 수 있다.
2.보안에 유리하다.
사용자마다 특정 객체만 조회할 수 있도록 권한을 부여를 할 수 있기에 
동일한 테이블을 접근하는 사용자마다에 따라 서로 다르게 보도록
여러개의 뷰를 정의해 놓고 특정 사용자만이 해당 뷰에 접근할 수 있도록 한다.

뷰의 종류 
뷰는 뷰를 정의하기 위해서 사용되는 기본 테이블의 수에 따라 단순뷰와 복합 뷰로 나뉜다.
단순 뷰 -> DML 사용 가능

복합 뷰 -> DML 사용 불가능 그러나 복합 뷰가 더 많이 쓰임.



