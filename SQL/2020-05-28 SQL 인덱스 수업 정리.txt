2020-05-28
인덱스

목차 => 우리가 찾고자 하는 내용을 빠르게 찾을 수 있다.
데이터베이스에서 사용하는 index도 같은 목적이다.
원본테이블과는 별개로 각 컬럼의 데이터들을 순서대로 주소값을 저장하고 있는 것이  index이다.

인덱스는 tree 구조
원본테이블의 추가, 삭제의 경우 인덱스의 트리 구조 상 함께 삭제하고 추가 해줘야되는 이유로
인덱스가 더 많아지면 많아질수록 DML 시 과부하가 생긴다.
검색을 빠르게 해준다고 해도, DML 작업이 훨씬 무거워지게 된다.

장점 
검색 속도가 빨라진다.
시스템에 걸리는 부하를 줄여서 시스템 전체 성능 향상
단점
물리적인 공간이므로 추가적인 저장 공간이 필요함
인덱스를 생성하는데 시간이 걸린다.(로우가 많으면 많을 수록 굉장히 오래 걸림)
B 트리 구조이다노니 데이터의 변경 작업(DML)이 자주 일어날 경우에는 오히려 서능이 저하된다.

그러므로 select   ()   where name = ...; 과 같이 변경 작업(DML)이 적고, select문 과 같은 검색 기능이 많다면
index를 사용하는 것이 좋다.

기본 키나 유일 키에 대한 인덱스는 오라클이 생성한 것이기에 인덱스의 이름 역시 자도 오라클에서 자동 부여 됨.
