2020-05-25
테이블 구조 생성 , 변경 및 삭제 <DDL>
관계형 데이터 베이스 (RDB) 데이터 저장 형식은 Table이다. (열, 컬럼)의 특성을 갖고 있다.
각각의 컬럼들의 이름, 데이터, 제약 조건(열을 대표하는 기본키, null값과 중복데이터의 규정,
				  도메인의 속성, 외래키 등등등...)
을 정의하고 저장하며 뿐만 아니라 변경 및 삭제 할 수 있다.

[1] 테이블 구조를 정의하는 CREATE TABLE
	table, index , sequence , view , function 등의 객체를 생성할 때 쓰인다.
	사용 예) create table table_name (column_name, data_type expr, ...);

	create table ddl_test(
    	no number(3),
   	 name  varchar(10),
   	 birth date default sysdate
	)
	;

	insert into ddl_test (no,name) values (1,'scott');
	select  * from  ddl_test;

	다양한 데이터 형이 있다
	char varchar2 numver date long(my SQL txt형태) timestamp(자바에 timestamp기능 있음) 등...

	CREATE TABLE 문에서 서브 쿼리를 사용하여 이미 존재하는 테이블과 동일한 구조와
	내용을 갖는 새로운 테이블을 생성할 수 있다.(즉 복사의 의미)

	1.create table 명령어 다음에 컬럼을 일일이 정의하는 대신 AS 절을 추가하여 emp 테이블과
	동일한 구조를 갖는 emp2 테이블을 생성한다고 해보자.
	사용예)
	create table emp02
	as
	select * from emp;


	2. 기존 테이블에서 원하는 컬럼만 선택적으로 복사해서 생성할 수도 있다.
	사용예)
	create table emp03
	as
	select empno, ename from emp;

	3. 서브 쿼리문의 select 문을 구성할 때 where 절을 추가하여 원하는 조건을 제시하면
	기존 테이블에서 일부의 행만 복사합니다.
	사용예)
	create table emp04
	as
	select * from emp
	where deptno =10
	;

	4. 모든 데이터를 복사하는 것이 구조만 복사하는 것도 가능하다.
	사용예)
	create table emp05
	as
	select * from emp
	where 1=0
	;


[2] 테이블 구조를 변경하는 ALTER TABLE
	ALTER TABLE 명령문은 기존 테이블의 구조를 변경하기 위한 DDL 명령문이다. 테이블게 대한 구조 변경은
	컬럼의 추가, 삭제, 컬럼의 타입이나 길이를 변경할 때 사용하게 된다. 테이블의 구조를 변경하게 되면
	기존에 저장되어 있던 데이터에 영향을 주게 되므로 주의해야 한다.

	명령어 종류
	add, modify, drop
	alter table add column
	alter table modify column
	alter table drop column

	1.새로운 컬럼 추가하기
	alter table add column 문은 기존 테이블에 새로운 컬럼을 추가합니다.
	새로운 컬럼은 테이블 맨 마지막에 추가되므로 자신이 워하는 위치에 만들어 넣을 수 없다.
	또한 이미 이전에 추가해 놓은 로우가 존재한다면 그 로우에도 컬럼이 추가되지만,
	컬럼 값은 null 값으로 입력된다.
	사용 예)
	alter table emp01 add(job varchar2(10));
	desc emp01;

	2.기존 칼럼 속성 변경하기
	alter table modify column 문은 기존에 존재하는 컬럼을 변경할 수 있다.
	컬럼을 변경한다는 것은 커럼에 대해서 데이터 타입니다, 크기, 기분값들을 변경한다는 의미이다.
	사용 예)
	alter table emp01 modify (job varchar(30) not null);
	desc emp01;

	3.기존 칼럼 삭제
	alter table drop column 문을 이용하여 테이블에 이미 존재하는 컬럼을 삭제해 보자.
	사용 예)
	alter table emp01 drop column sal;
	desc emp01;

	4. 테이블 객체 삭제
	drop table 테이블이름 문을 이용하여 테이블 객체 자체를 삭제하는 방법
	사용 예)
	drop table emp01;
	select * from tab;
	
	5.테이블의 모든 로우를 제거하는 truncate
	truncate 테이블이름 문을 이용하여 기존에 사용하던 모든 로우를 제거하기 위한 명령어
	사용 예)
	

	6. 테이블 명을 변경하는 rename
	rename old_name to new_name 문을 이용하여 기존에 사용하던 테이블의 이름을 변경
	사용 예)
	rename emp02 to test_emp;
	select * from tab;
	
	

[3] 데이터 무결성을 위한 제약 조건 (중요)
	1.무결성 제약 조건의 개념과 종류
	not null : 널값 허용 X
	unique :  중복된 값을 혀용하지 않는다. 항상 유일한 값을 갖도록 한다.
	primary key : Null을 허용하지 않고 중복된 값을 허용하지 않는다.
		     not null 조건과 unique 조건을 결합한 형태이다.
	foreign key : 참조되는 테이블의 카럼의 값이 존재하면 허용한다. null 허용
	check : 저장 가능한 데이터 값의 범위나 조건을 지정하여 설정한 값만 허용한다.
	default : null 입력 시 기본값이 입력되도록 정의함.
	2. 제약 조건 확인하기
	사용 예)
	insert into dept values(10, 'test' , 'seoul');
	오류 보고 -
	ORA-00001: 무결성 제약 조건(SCOTT.PK_DEPT)에 위배됩니다
	3.NOT NULL 제약 조건 지정
	제약 조건을 설정하는 방법은 컬럼 레벨과 테이블 레벨 두 가지 방식이 있다.
	사용 예)
	create table emp02(
  	 empno number (4) not null,
    	 ename varchar2(10) not null,
   	 job varchar2(10),
    	 deptno number(2)
	 );
	

	create table emp01(
  	empno number(4),
   	primary key(empno)
   	 )


	4.유일한 값만 허용하는 unique 제약 조건
	사용 예)
	create table emp03(
   	empno number(4) unique not null, --유니크와 낫널 동시 선언 가능
    	ename varchar2(10) not null,
   	job varchar2(10),
   	deptno number(2)
	) ;
	

	5. 컬럼 레벨로 제약 조건명을 명시해서 제약 조건 설정하기
	사용자 제약 조건 명을 설정한다.
	[테이블명]_[칼럼명]_[제약 조건 유형]
	사용예)

	6.primary key 제약 조건 설정하기.
	primary key 는 not null과 unique 키의 합성
	사용예)
	create table emp05(
  	  empno number(4) CONSTRAINT emp05_empno_pk primary key,
   	 ename varchar2(10) CONSTRAINT emp05_ename_nn not null,
   	 job varchar2(10), 
   	 deptno number(2)
	);


	7.참조 무결셩을 위한 foreign key 제약 조건
	부모키에 있는 데이터만 사용할 수 있다.
	사용 예)
	create table emp06(
   	empno number(4) CONSTRAINT emp06_empno_pk primary key,
    	ename varchar2(10) CONSTRAINT emp06_ename_nn not null,
   	job varchar2(10), 
    	deptno number(2) CONSTRAINT emp06_deptno_fk references dept(deptno)
	);

	insert into emp06 values(1111,'TEST','MANAGER',10);
	insert into emp06 values(1111,'TEST','MANAGER',20);
	insert into emp06 values(null,'TEST123','MANAGER',20);
	insert into emp06 values(2222,'TEST123','MANAGER',50);
	select * from emp06;
	desc emp06; 
	
	8.CHECK 제약 조건
	입력되는 값을 체크하여 설정된 값 이외의 값이 들어오면 오류 메시지와 함께 명령이
	수행되지 못하게 하는 것이다.
	조건으로 데이터의 값의 범위나 특정 패턴의 숫자나 문자 값을 설정할 수 있다.
	예를 들어 사원 테이블에 급여 컬럼을 생성하되 급여 컬럼 값은 500에서 5000사이의 값만
	저장할 수 있도록 하거나 성별을 저장하는 컬럼으로 GENDER를 정의하고, 이 컬럼에는 남자는
	M, 여자는 F 둘 중의 하나만 저장할 수 있도록 제약을 주려면 CHECK 제약조건을 지정해야 한다.
	

	9.default 제약 조건
	디폴트는 아무런 값을 입력 하지 않았을 때 디폴트 제약의 값이 입력이 됩니다.
	
	