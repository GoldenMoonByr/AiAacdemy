2020-04-14
메서드에 대한 이해와 메서드의 정의
우리가 아는 것
	main 메소드, 중괄호 내에 존재하는 무장들이 위에서 아래로 순차적 실행

모르는 것
	public , static, void
	왜 항상 main 인가?
	String[] agrs
	자바 프로그램의 시작은 main 이라는 이름의 메서드를 실행하는 데서부터 시작한다.
	(우리가 정한 것이 아닌 Java내에 설정되어있다.)

메서드란?
	작업을 수행하기 위한 명령문의 집합
	어떤 값을 입력받아서 처리하고 그 결과를 돌려준다.
	(입력받는 값이 없을 수도 있고 결과를 들려주지 않을 수도 있다.)
	어떤 데이터를 받아 선언 되어진 변수에 대입하고, 연산하며, 그에 따라 비교,반복하여
	그에따른 처리값을 반환하는 것. 그러나 데이터 입력, 반환값은 없어도 된다.


메서드의 장점과 작성지침
	반복적인 코드를 줄이고 코드의 관리가 용이하다.
	반복적으로 수행되는 여러 문장을 메서드로 작성한다.
	하나의 메서드는 한 가지 기능만 수행하도록 작성하는 것이 좋다.
	관련된 여러 문장을 메서드로 작성한다.
	(반복적인 기능을 따로 뺀다거나, 각 기능을 조각화 하면 좋은점이 정말 많은데,
	유지보수에 능하고 , 능률, 경제적이다.)
	

메서드 요약!
	데이터(input)  => 처리, 변수 , 연산 => 결과 응답(output)
	(입력받는 값이 없을 수도 있고 결과를 돌려주지 않고 데이터로 저장하는 경우도 있다.)



메서드를 정의하는 방법 - 클래스 영역에만 정의할 수 있음
	리턴타입 메서드이름(타입 변수명, 타입 변수명 ,,,)
	리턴타입 : 결과 Data의 타입 / 메서드이름 : 역할 수행의 의미를 직관적으로.
	매개변수 : 직관적으로.

더하기 기능의 메서드 정의 정수형 숫자 2개를 받음.

	int add(int a, int b){
	(요즘엔 long형도 많이 씀)	
		int result = a+b;
		return result;

	}

	

	void power(){

		power =!poewr;
	}
	//반환값이 없는 경우 리턴타입 대신 void를 사용한다.

메서드의 위치
	class 블록에 위치, 정의해야 한다.
	
	연산을 하기 위해서는 메소드를 메모리에 올려야 되는데, 메모리에 올려 놓는 것을
	인스턴스화(객체화) 라고한다.
	static => 메서드가 실행 되기 전(인스턴스화 전)에 메모리에 미리 올려놓는다.
	+ 매개변수의 형을 맞추줘야 하며, 형변환을 아고 있어야 한다.

	지역변수 : 메서드 블록에서 선언 된 블록 , 번선 선언시에 생성, 메서드가 종료되었을때 지역 변수는 소멸된다.


return	!!메서드가 정상적으로 종료되는 경우!!
	메서드의 블럭{}의 끝에 도달했을 때
	메서드의 블럭{}을 수행 도중 return문을 만났을 때

	반환값이 없는 경우 - return문만 써주면 된다. return;
	반환값이 있는 경우 - return문 뒤에 반환값을 지정해 주어야 한다. return 반환값;

	1.메서드
	2.for 정의부
	3. if 안에서의 변수

클래스 메서드 상수의 이름 규칙
	클래스 이름
	Camel Case
1.
	대문자로 시작한(꼭 그래야만 하는 것은 아니지만 약속)
	
	변수의 이름
	소문자로 시작
	둘 이상의 단어가 묶여서 하나읭 ㅣ름 구성 시 세 단어는 대문자로 시작
 	
	상수 이름
	전부 대문자로 표현
	둘 이상의 단어가 묶여서 하나의 이름 구성 사, 두 단어 사이에 _ 삽입





정리
메서드	특정 기능을 수행하기 위한 코드들 묶어놓은것
	수행하기 위해서는 수행하기 위한 데이터들이 필요하다
	//데이터가 필요할 떄 배개변수 선언 데이트를 받는다.

	특정 기능 DATA = > 변형 => 연산자,분기를 이용 다양한처리 3. 반복


 	결과 반환 : void;


	반환타입 메서드이름(매개변수..,..) {

	변수 / 연산 / 비교 / 반복.

	}
	반환타입 - 기본형 , 참조형 , void
	



객체지향언어
객체 -> 사물 / 사건 
	속성 , 기능
	
	객체 = (속성 -> 변수 + 기능 -> 메서드)
	그러므로 이 객체의 변수,기능을 사용할 수 있다.
	
	그럼 사용하기 위해서는 쓸 수 있는 상태에 이르러야 하며, 메모리에 로드 시켜놓는 것을
	객체화(인스턴스화)라고 한다.
	
	class -> 인스턴스(객체)-> 묶음(내가 정의한 변수1,2 메소드 1,2


클래스와 객체의 정의와 용도

	클래스의 정의 - 클래스란 객체를 정의해 놓은 것이다.
	클래스의 용도 - 클래스는 객체를 생성하는데 사용된다.(메모리에 올려 인스턴스화 시켜야 그 효용을 발생함.)
	객체는 속성과 기능의 집합. 속성솨 기능을 객체의 멤버(구성요소)라고 한다.
	속성은 변수로, 기능은 메서드로 정의한다.
	
	class Tv{

	String color;
	bollean power;
	int channer;

	void power() {power = !power;}
	void channerUp(){channel++;}
	
	}




*********************우리가 궁극적으로 사용 하고자 하는 것은 클래스가 아니라
객체가 가지는 변수와 메서드 이고, 객체를 사용하려면 먼저 클래스로부터 객체를 생성해야 한다.

클래스가 인스턴스화(객체화)를 거치고 새로운 메모리에 저장된다. 그리고 그 저장된 메모리를 따로 
내가 관리하기 위해 참조 변수를 선언하여 사용한다.


+null 값은 아무것도 참조하지 않음을 의미하는 키워드.










사과 판매 시뮬레이션 프로그램
사과장수 : 개념 정의 -> 속성 ,기능
구매자 : 개념 정의 -> 속성 ,기능

클래스 정의
class FruitSeller
class FruitBuyer

프로그램을 구성해야함 : main 메서드에서 조립.








사과를 판매하는 프로그램
사과장수: 개념, 정의 -> 속성 기능;
구매자 : 개념 정의 -> 속성 기능


	
