2020-04-23 
<상속>
	      상 to the 속
	조상 < ㅡ 관계 ㅡ > 자손
	
	새로운 클래스를 만들기위해 이미 만들어진 클래스를 그대로 재사용.
	이미 만들어진 것을 써야되니까 '가이드 및 표준'의 역할도 한다.
	조상이 갖고 있는 멤버들을 그대로 가져다가 쓴다.


	상속은 재활용 + 알파
	상속은 기존에 정의된 클래스에
	메소드와 변수를 추가하여
	새로운 클래스를 정의 하는 것
	
	재사용이라기 보다는 공통적인 규약을 정의하고 적용하는데, 상속의 실질적인 목적이 있다.
	*오버라이딩* 통해 새롭게 기능을 추가 하거나 재정의 한다.

	상속(inheritance)의 정의와 장점

	상속이란?
	기존의 클래스를 재사용해서 새로운 클래스를 작성하는 것
	두 클래스를 조상과 자손으로 관계를 맺어주는 것
	-자손은 조상의 모든 멤버를 상속받는다.(생성자, 초기화블럭 제외)
	자손의 멤버개수는 조상보다 적을 수 없다.
	자바에서는 생성자는 따로 상속받지 않는다. 생성자는 별도로 따로 봐줘야됨.
	상속받는 자식 클래스는 부모 클래스의 멤버를 모두 상속받는다.선택적 X

	class 자손클래스 extends 조상클래스{

	


	}

	모든 클래스는 java.lang.objact이 기본값으로 설정되어 있는 것을 보면
	기본적으로 objact를 상속하고 있었다.

	클래스간의 관계 - 상속관계(inheritance)
	-공통부분은 조상에서 관리하고 개별부분은 자손에서 관리한다.
	-공통부분 => 상위 개념의 공통 변수, 공통 메서드 등..
	-즉, 상위클래스를 변경해주면, 자손클래스는 모두 그에 따라 영향 받는다.
	-그러나 , 자손클래스의 변경은 아무런영향을 미치지 않는다.

	class parent (extends object 생략되어있음!) {}
	class child extends parent{}
	class chile2 extends parent{}
	class Grandchild extends child {}

	상속시 생성자의 경우 ? 하위클래스 생성자 내에서 상위클래스의 생성자 호출을 통해서
				상위 클래스의 인스턴스 멤버를 초기화 한다는 점이다.

	
	하위 클래스의 생성자는 상위클래스의 인스턴스 변수를 초기화할 데이터까지 인자로 전달받아야 한다.
	하위 클래스의 생성자는 상위 클래스의 생성자 호출을 통해서 상위 클래스의 인스턴스 변수를 초기화한다.
	키워드 super는 상위 클래스의 생성자 호출에 사용된다.
	하위 클래스와 상위 클래스의 구분에 이용.(이름이 같을 경우가 생길 수도 있음 추후에 다시 보기로 함.)
	super와 함께 표시된 절달되는 인자의 수와 자료형을 참조하여 호출할 생성자가 결정 된다.



	super- 참조변수
	this - 인스턴스 자신을 가리키는 참조변수. 인스턴스의 주소가 저장되어있음.
		모든 인스턴스 메서드에 지역변수로 숨겨진 채료 존재



	super - this와 같음. 상위의 멤버와 하위의 멤버를 구별하는 데 사용



	상속과 접근제어 지시자
	
	접근 제어 지시자의 목적: 


	private : class 내부 , 보호하는 것에 목적
	default : 같은 package
      **protected : 같은 package ,다른 패키지의 상속관계**
	public : 제한 없음.
	
	static 변수(메소드) 의 상속과 생성자의 상속에 대한 논의

	static 변수도 상속이 되나요? 네!

	상속을 위한 관계
	


	오버라이딩(overriding)
	조상클래스로부터 상속받은 ㅁ소드의 내용을 상속받는
	클래스에 맞게 변경하는 것을 오버라이딩이라고 한다.
	데이터 타입, 선언쪽은 무조건 바뀌면 안 된다.\


	오버라이딩의 조건
 	1.선언부(이름  , 매개변수 . 리턴타입)이 같아야 한다.



	오버로딩 : 같은 이름의 메서드를 정의하는 것(기존에 없는 새로운 메서드를 정의)
	오버라이딩 : 이미 만들어져 있었던 기존의 메소드를 재정의 하는 것(상속받은 메서드의 내용을 변경하는 것)










 car  1.FireEngine 2.Ambulance
	
1    2  2
