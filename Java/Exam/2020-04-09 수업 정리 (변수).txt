2020-04-09 수업 내용 정리 

println과 print의 차이

	System.out.println(): 괄호 안의 내용을 출력한 후 한 행을 띄움(엔터 키를 눌러주는 것)
	System.out.print(): 괄호 안의 내용을 출력한 후 한 행을 띄지 않고 유지

("문 자 열")
	문 자 열에 해당하는 공간에 입력하여 사용 시 해당기능을 수행
		\n : 새로운 줄로 이동
		\t : tab키
		\b : 뒤로 한 칸 이동
		\r : 줄의 맨 앞으로 이동
		\\ : \출력
		\' : '출력
		\" : "출력

비트 개념
	컴퓨터는 전기 신호를 통해 모든 작업을 수행(0 또는 1의 2진수)
	이러한 모든 작업은 2진수를 통해서 수행 및 저장된다.
	n개의 전기 스위치로 표현할 수 있는 가짓 수 = 2^n
	즉 , 4bit = 2^4개 표현 = 16가지 표현
	1byte = 8bit
	2진수 - 10진수 -16진수 변환 가능 (컴퓨터가 계산함에 있어서 필요한 프로세스를 줄여줄 수 있음)



변수란?
	변수는 메모리 공간을 의미하며 각 목적에 맞는 데이터를 목적에 부합하는 자료형으로 저장된다.
	int num1; (목적에 맞게 int 자료형에 해당하는 공간을 만든 후 num1이라고 명명한다.)
	num1 = 100; (num1이라는 메모리 공간에 int형 100이라는 정수를 넣어서 저장한다.)
	
	int num1 = 100; 이라고도 한 번에 표현 가능
	또, 같은 자료형의 경우 int i , f; 이렇게 한 번에 선언 가능.


자료형의 종류와 구분
	- 기본형 : 8가지(boolean ,char, short, int, long, float , double)
	- 실제 값을 저장

	- 참조형 : 기본형을 제외한 나머지(String, System)
	- 객체의 주소를 저장(4 byte , 0x0000000~0xfffffff)


	기본형
	정수 표현 : byte(1byte) , short(2byte) , int(4byte), long(8byte)
	실수 표현 : float(4byte) , double(8byte)
	문자 표현 : char(2byte)
	참과 거짓의 표현 : boolean


변수의 명명법
	1.대소문자가 구분되어 길이에 제한이 없다.
	2.예약어 사용 불가
	  ex) true 사용 불가, True 가능
	3.숫자로 시작 안 된다.
	4. 특수문자는 '_'와 $만을 허용.


정수 표현
	가장 왼쪽 비트 (MSB)는 부호를 나타내고 나머지는 크기를 나타낸다.
	
	2의 보수가 음의 정수 표현방식

실수 표현 
	0과 1사이는 무한대지만, 바이트 수는 한정적이므로 부동 소수점으로 표현
	정밀도는 떨어지더라도 , 최대한 표현할 수 있는 값의 범위는 넓어지게 됨.
	실수간의 연산에서는 소숫점 아래 값들이 조금 이상해 질 수 있으니 감안해야 됨.




정수 자료형
	CPU는 int형 데이터의 크기만 연산한다.
	그러므로 모든 자료형은 int형으로 변환된 뒤에 연산이 진행된다.
	(접미사의 존재 이유)

	그럼 short와 byte는 굳이 왜 쓰는가?
	영상이나 MP3 , 이미지 같은 경우 바이너리코드로 구성
	(즉, 연산과 같은 부분들이 존재하지 않음)
	이럴 경우 연산 보다는 데이터의 양이 더 중요한 부분이다
	그럴경우 shory 와 byte를 사용


실수 자료형
	float -> 소수점 이하 7자리까지
	double -> 소수점 이하 16자리까지
	일반적으로 double의 선택이 선호됨
	
	1.2x10^-3 = 1.2e-3로 표기 가능

자바의 문자 표현
	문자 하나는 해당되는 유니코드로 메모리 공간에 저장된다.(2byte)
	문자는 ''로 표현
	문자는 char형 변수에 저장되나, 실제로는 유니코드 값으로 저장된다.



참과 거짓 표기위한 boolean
	기본값은 false
	조건, 반복문의 사용 시 확장되어 사용 될 수 있다.



변수 , 상수 , 리터럴
	변수 = 하나의 값을 저장하기 위한 공간
	상수 = 변하지 않는 값 (ex : pi값)
	리터럴 = 그 자체로 값을 의미하는 것 (한 번 선언 되면 상수의 의미와도 같다)
	상수 변수 : final 이라는 키워드 사용, 이름은 대문자로 표현, 값은 한 번 대입되면 고정되어 불변.

	int score(변수) = 100(리터럴)
	String str(참조 변수) =  "abc"(리터럴)
	final(키워드) int MAX(상수 변수) =100;(리터럴)

변수의 초기화
	변수에 처음으로 값을 저장하는 것
	지역번수는 사용되기 전에 반드시 초기화해야한다.
	boolean = false;
	char grade = ''; (\u0000)
	byte b= 0;
	short s =0;
	int i =0;
	long l = 0; //0L로 자동변환
	float =0; //0.0f로 자동변환
	String s1 = null; //참조 변수의 주소값이 없음, 아직 만들어지기 전.	
	String s2 = "";  //빈 문자열



문자열의 연산
	연산의 순서를 잘 파악하자.
	꼭 왼쪽 부터 연산
	ex) 7 + 7 + "" = "14"
	ex) "" + 7 + 7 = "77"
	문자열 + any type = 문자열
	any type + 문자열 = 문자열


상수형 변환
	정수의 기본형은 int
	상수의 기본형은 double
	그에 맞게 접미사를 꼭 붙인다.

자료형 변환
	1과 1.0의 연산이 1.1이 될 수 없다.
	2진수로 표현 했을때 전혀 다른 구성이므로.


****자동 형 변환 규칙****
	
형 변환 할때는 ** 자료의 표현 범위가 더 큰 경우**가 기준이 된다. (long(8byte) , float(4byte) 탑에서 long이 float 타입에 맞춰짐.)
	byte -> short / char(서로 표현 범위가 다르므로 같은 2byte 라도 다르게 구분) -> int ->long ->float -> double
	ex) short + int = int (short가 int로 자동으로 형변환)


명시적 형 변환
	필요시에 강제적으로 형 변환
	(float) int x = 120;


	
요약
1. 변수의 사용 목적 = 어떤 데이터들을 어떻게 쓸 것인가, 어떤 값을 저장할 것인가?
2. 변수의 선언 방법 = 자료형 타입 변수이름;
3. 기본 자료형
4. 변수와 상수 그리고 리터럴
5. 자료형의 변환 (형 변환)

!다루어야 하는 데이터에 맞는 변수 선언을 할 수 있다.
!데이터들의 연산에 맞는 변수 선언을 할 수 있다.














100000000000L + 0.1D




